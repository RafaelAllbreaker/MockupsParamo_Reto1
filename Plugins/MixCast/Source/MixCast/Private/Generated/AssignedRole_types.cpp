/**
 * Autogenerated by Thrift Compiler (Shiyao Modified base on 0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "AssignedRole_types.h"

#include <algorithm>
#include <ostream>

#include <thrift/TToString.h>

namespace mixcast { namespace data {

int _kAssignedRoleValues[] = {
  AssignedRole::UNKNOWN,
  AssignedRole::HEAD,
  AssignedRole::LEFT_HAND,
  AssignedRole::RIGHT_HAND
};
const char* _kAssignedRoleNames[] = {
  "UNKNOWN",
  "HEAD",
  "LEFT_HAND",
  "RIGHT_HAND"
};
const std::map<int, const char*> _AssignedRole_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kAssignedRoleValues, _kAssignedRoleNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));

std::ostream& operator<<(std::ostream& out, const AssignedRole::type& val) {
  std::map<int, const char*>::const_iterator it = _AssignedRole_VALUES_TO_NAMES.find(val);
  if (it != _AssignedRole_VALUES_TO_NAMES.end()) {
    out << it->second;
  } else {
    out << static_cast<int>(val);
  }
  return out;
}

}} // namespace
